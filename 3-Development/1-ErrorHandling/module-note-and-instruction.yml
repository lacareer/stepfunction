
# https://docs.aws.amazon.com/step-functions/latest/dg/concepts-error-handling.html

SF Retriers 
# Task and Parallel states can have a field named Retry, 
# whose value must be an array of objects known as retriers. 
# An individual retrier represents a certain number of retries, 
# usually at increasing time intervals.

# In the exercise below, you will create an ASL definition that invokes a Lambda function. 
# The Lambda function is designed to fail. You will implement a Retry for this function, 
# setting maximum attempts with an exponential backoff rate between retries.

# Note that although this examples seperates Retry and Catch, they can be combined

SF Retriers options

(1) ErrorEquals (Required)
  A non-empty array of strings that match error names. 
  When a state reports an error, Step Functions scans through the retriers. 
  When the error name appears in this array, it implements the retry policy described in this retrier.

(2)IntervalSeconds (Optional)
  An integer that represents the number of seconds before the first retry attempt (1 by default). 
  IntervalSeconds has a maximum value of 99999999.

(3)MaxAttempts (Optional)
  A positive integer that represents the maximum number of retry attempts (3 by default). 
  If the error recurs more times than specified, retries cease and normal error handling resumes. 
  A value of 0 specifies that the error or errors are never retried. MaxAttempts has a maximum value of 99999999.

(4)BackoffRate (Optional)
  The multiplier by which the retry interval increases during each attempt (2.0 by default).

  
SF Catch options

# Task, Map, and Parallel states may contain a field named Catch. 
# This field's value must be an array of objects, known as catchers. 
# Each catcher can be configured to catch a specific type of error. 
# ASL defines a set of built-in strings that name well-known errors, all beginning with the States. prefix. 
# Catchers may also catch custom errors. Each catcher may be configured to forward to a specific fallback state. 
# Each fallback state may implement error handling logic. Built-in error types include:

  States.ALL - a wildcard that matches any known error name
  States.DataLimitExceeded - an output exceeds quota
  States.Runtime - a runtime exception could not be processed
  States.HeartbeatTimeout - a Task state failed to send a heartbeat
  States.Timeout - a Task state timed out
  States.TaskFailed - a Task state failed during execution
  States.Permissions - a Task state had insufficient privileges

# When a state has both Retry and Catch fields, Step Functions uses any appropriate retriers first, 
# and only afterward applies the matching catcher transition if the retry policy fails to resolve the error.

